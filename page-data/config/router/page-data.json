{"componentChunkName":"component---src-templates-page-js","path":"/config/router/","result":{"data":{"markdownRemark":{"html":"<p>The <code class=\"language-text\">router</code> property is an object which provide low level access to modify the behaviour of the router plugin. Learn more about <a href=\"/usage/routing/\">routing</a> in the usage documentation.</p>\n<ul>\n<li><code class=\"language-text\">error_message</code><br>\nPrint information message on error to <code class=\"language-text\">stderr</code>, default <code class=\"language-text\">true</code>.</li>\n<li><code class=\"language-text\">error_stack</code><br>\nPrint information message on error to <code class=\"language-text\">stderr</code>, default <code class=\"language-text\">false</code>.</li>\n<li><code class=\"language-text\">error_help</code><br>\nPrint information message on error to <code class=\"language-text\">stderr</code>, default <code class=\"language-text\">false</code>.</li>\n<li><code class=\"language-text\">exit</code><br>\nExit the process on error, default <code class=\"language-text\">false</code>.</li>\n<li><code class=\"language-text\">handler</code> (function|string)<br>\nThe function or the module name used to handle errors or undefined handlers.</li>\n<li><code class=\"language-text\">promise</code> (boolean, <code class=\"language-text\">false</code>)<br>\nWrap all the returned value into a promise if not yet one.</li>\n<li><code class=\"language-text\">stdin</code> (<a href=\"https://nodejs.org/api/stream.html#class-streamreadable\"><code class=\"language-text\">stream.Readable</code></a>, <code class=\"language-text\">process.stdin</code>)<br>\nThe standard input stream reader. It default to <code class=\"language-text\">process.stdin</code> but it is\nsometime usefull to switch your own implementation such as in your tests.</li>\n<li><code class=\"language-text\">stdout</code> (<a href=\"https://nodejs.org/api/stream.html#class-streamwritable\"><code class=\"language-text\">stream.Writable</code></a>, <code class=\"language-text\">process.stdout</code>)<br>\nThe standart output stream writer. It default to <code class=\"language-text\">process.stdout</code> but it is\nsometime usefull to switch your own implementation such as in your tests. Also,\nthe <code class=\"language-text\">grpc_server</code> plugin switch its own writer used to communicate with the GRPC the server.</li>\n<li><code class=\"language-text\">stdout_end</code> (boolean, <code class=\"language-text\">false</code>)<br>\nClose the standart output stream writer when the command has been processed.</li>\n<li><code class=\"language-text\">stderr</code> (<a href=\"https://nodejs.org/api/stream.html#class-streamwritable\"><code class=\"language-text\">stream.Writable</code></a>, <code class=\"language-text\">process.stderr</code>)<br>\nThe standart error stream writer. It default to <code class=\"language-text\">process.stderr</code>. The same argument as with <code class=\"language-text\">stdout</code> apply. Note, the <code class=\"language-text\">help</code> plugin write to <code class=\"language-text\">stderr</code> by default.</li>\n<li><code class=\"language-text\">stderr_end</code> (boolean, <code class=\"language-text\">false</code>)<br>\nClose the standart output stream writer when the command has been processed.</li>\n</ul>\n<h2 id=\"short-declaration\" style=\"position:relative;\"><a href=\"#short-declaration\" aria-label=\"short declaration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Short declaration</h2>\n<p>If the <code class=\"language-text\">router</code> property is a string, it is interpreted as the module name exporting the handler function. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shell'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">router</span><span class=\"token operator\">:</span> <span class=\"token string\">'./my/module'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Is equivalent to:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shell'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">router</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">handler</span><span class=\"token operator\">:</span> <span class=\"token string\">'./my/module'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note, the <code class=\"language-text\">help</code> command, activated by default when a first command is registered, writes by default to <code class=\"language-text\">stderr</code> and close the stream if <code class=\"language-text\">stderr_end</code> is enabled.</p>","frontmatter":{"title":"Router property configuration","keywords":["shell","node.js","cli","usage","load"],"description":"How to use load property."},"fields":{"edit_url":"https://github.com/adaltas/node-shell/edit/master/docs/content/config/router.md","slug":"/config/router/"},"headings":[{"value":"Short declaration","depth":2,"id":"short-declaration"}]}},"pageContext":{}},"staticQueryHashes":["233544656","63159454"],"slicesMap":{}}