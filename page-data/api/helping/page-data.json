{
    "componentChunkName": "component---src-templates-page-js",
    "path": "/api/helping/",
    "result": {"data":{"markdownRemark":{"html":"<p>Determine if help was requested by returning zero to n commands if help is requested or null otherwise.</p>\n<ul>\n<li><code class=\"language-text\">params</code> ([object] | object)<br>\nThe parameter object parsed from arguments, an object in flatten mode or an array in extended mode, optional.</li>\n</ul>\n<h2 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h2>\n<p>This method is commonly used conjointly with the <code class=\"language-text\">help</code> method. It provides an indication wether or not help was requested and the command to inject to <code class=\"language-text\">help</code>.</p>\n<h2 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>The workflow is to <code class=\"language-text\">parse</code> the arguments to get the extracted data, to create a condition to get the command associated with help and to print the help by passing the returned command:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shell'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'server'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'Manage a web server'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">commands</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'start'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'Start a web server'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'host'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">shortcut</span><span class=\"token operator\">:</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'Web server listen host'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'port'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">shortcut</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'integer'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'Web server listen port'</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> command <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">helping</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> help <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">help</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span>\n  process<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>help<span class=\"token punctuation\">)</span>\n  process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Considering the above example, the commands <code class=\"language-text\">./myapp help</code> <code class=\"language-text\">./myapp --help</code> and <code class=\"language-text\">./myapp -h</code> print the application help. The commands <code class=\"language-text\">./myapp help start</code>, <code class=\"language-text\">./myapp start --help</code> and <code class=\"language-text\">./myapp start -h</code> print the help of the <code class=\"language-text\">start</code> command.</p>","frontmatter":{"title":"API method `helping`","keywords":["shell","node.js","cli","api","helping","help","print"],"description":"How to use the `helping` method to determine if help was requested."},"fields":{"edit_url":"https://github.com/adaltas/node-shell/edit/master/docs/content/api/helping.md","slug":"/api/helping/"},"headings":[{"value":"Description","depth":2,"id":"description"},{"value":"Example","depth":2,"id":"example"}]}},"pageContext":{}},
    "staticQueryHashes": ["1387919533","63159454"]}