{
    "componentChunkName": "component---src-templates-page-js",
    "path": "/api/compile/",
    "result": {"data":{"markdownRemark":{"html":"<p>Convert data to an arguments array.</p>\n<ul>\n<li><code class=\"language-text\">data</code> (object, optional)<br>\nThe data to be converted into an array of arguments.</li>\n<li><code class=\"language-text\">options</code> (object)<br>\nOptions used to alter the behavior of the <code class=\"language-text\">compile</code> method.\n<ul>\n<li><code class=\"language-text\">extended</code> (boolean, optional, <code class=\"language-text\">false</code>)</li>\n</ul>\nThe value <code class=\"language-text\">true</code> indicates that the parameters are provided in extended format, default to the configuration <code class=\"language-text\">extended</code> value which is <code class=\"language-text\">false</code> by default.\n<ul>\n<li><code class=\"language-text\">script</code> (string, optional, <code class=\"language-text\">false</code>)</li>\n</ul>\nThe JavaScript file being executed by the Node.js engine. When provided, the Node.js engine and the script names will prepend the returned arguments.</li>\n<li>Returns: (array)<br>\nThe command line arguments.</li>\n</ul>\n<h2 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h2>\n<p>To compile an object is the reverse process of processing an array of arguments with the <code class=\"language-text\">parse</code> function. In that sense, Shell.js is bi-directional, it can both convert arguments to objects and back from objects to arguments.</p>\n<p>It supports both the default flatten mode and the extended mode. The <code class=\"language-text\">extended</code> property can be defined in the configuration or as an option of <code class=\"language-text\">compile</code>. In flatten mode, the <code class=\"language-text\">command</code> argument is an object while in <code class=\"language-text\">extended</code> mode it is an array of object.</p>\n<h2 id=\"examples\" style=\"position:relative;\"><a href=\"#examples\" aria-label=\"examples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples</h2>\n<p>Considering a \"server\" application containing a \"start\" command and initialised with the following configuration:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Manage a web server\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"config\"</span><span class=\"token operator\">:</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">shortcut</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">commands</span><span class=\"token operator\">:</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"start\"</span><span class=\"token operator\">:</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Start a web server\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"host\"</span><span class=\"token operator\">:</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">shortcut</span><span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Web server listen host\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"port\"</span><span class=\"token operator\">:</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">shortcut</span><span class=\"token operator\">:</span> <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Web server listen port\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Called with only the <code class=\"language-text\">config</code> option, the <code class=\"language-text\">compile</code> method convert a literal object into a shell command:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> <span class=\"token string\">\"app.yaml\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>should<span class=\"token punctuation\">.</span><span class=\"token function\">eql</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"--config\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app.yaml\"</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p>In extended mode, the data input will be an array instead of an object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> <span class=\"token string\">\"app.yaml\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">extended</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>should<span class=\"token punctuation\">.</span><span class=\"token function\">eql</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"--config\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app.yaml\"</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p>Working with commands is quite similar:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> <span class=\"token string\">\"app.yml\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">command</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>should<span class=\"token punctuation\">.</span><span class=\"token function\">eql</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"--config\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app.yml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--host\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--port\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"80\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In extended mode, the data input will be an array with 2 elements instead of an object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> <span class=\"token string\">\"app.yml\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">command</span><span class=\"token operator\">:</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>should<span class=\"token punctuation\">.</span><span class=\"token function\">eql</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"--config\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app.yml\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--host\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--port\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"80\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"API method `compile`","keywords":["shell","node.js","cli","api","compile","arguments","argv","array"],"description":"How to use the `compile` method to convert an object to an arguments array."},"fields":{"edit_url":"https://github.com/adaltas/node-shell/edit/master/content/api/compile.md","slug":"/api/compile/"},"headings":[{"value":"Description","depth":2,"id":"description"},{"value":"Examples","depth":2,"id":"examples"}]}},"pageContext":{}},
    "staticQueryHashes": ["1387919533","63159454"]}