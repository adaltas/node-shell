{"componentChunkName":"component---src-templates-page-js","path":"/api/route/","result":{"data":{"markdownRemark":{"html":"<p>The <code class=\"language-text\">route</code> method dispatch command into handler functions. An <code class=\"language-text\">handler</code> is a function or the name of a module exporting a function. Learn more about <a href=\"/usage/routing/\">routing</a> in the usage documentation.</p>\n<ul>\n<li><code class=\"language-text\">context</code>: <code class=\"language-text\">[string] | object</code> The arguments to parse into data, accept the <a href=\"https://nodejs.org/api/process.html\">Node.js process</a> instance, an <a href=\"https://nodejs.org/api/process.html#process_process_argv\">argument list</a> provided as an array of strings or the context object; optional, default to <code class=\"language-text\">process</code>.</li>\n<li><code class=\"language-text\">...users_parameters</code>: <code class=\"language-text\">any</code> Additionnal parameters that will be passed to the handler function associated with a route.</li>\n<li>Returns: <code class=\"language-text\">any</code> Whatever the handler function returns.</li>\n</ul>\n<h2 id=\"basic-usage\" style=\"position:relative;\"><a href=\"#basic-usage\" aria-label=\"basic usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic usage</h2>\n<p>Considering a \"server\" application containing a \"start\" and a \"stop\" commands, each commands define a <code class=\"language-text\">handler</code> which point to a module exporting a function:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"server\"</span><span class=\"token punctuation\">,</span>\n  commands<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          shortcut<span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n          description<span class=\"token operator\">:</span> <span class=\"token string\">\"Web server listen host\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          shortcut<span class=\"token operator\">:</span> <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span><span class=\"token punctuation\">,</span>\n          description<span class=\"token operator\">:</span> <span class=\"token string\">\"Web server listen port\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      handler<span class=\"token operator\">:</span> <span class=\"token string\">\"./routes/start.js\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The file \"./routes/start.js\" could look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>argv<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  process<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Listen address is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"passing-arguments\" style=\"position:relative;\"><a href=\"#passing-arguments\" aria-label=\"passing arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing arguments</h2>\n<p>By default, the arguments are extracted from the <code class=\"language-text\">process.argv</code> array. The first two elements of the array are striped out. They corresponds to the Node.js command and the module being executed that is your application main entry point.</p>\n<p>You can however pass your own arguments such as:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--port'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>In which case, <code class=\"language-text\">argv</code> will equals to:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--port'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"passing-additionnal-parameters\" style=\"position:relative;\"><a href=\"#passing-additionnal-parameters\" aria-label=\"passing additionnal parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing additionnal parameters</h2>\n<p>Any additionnal arguments will be passed to the <code class=\"language-text\">handler</code> function, for example, calling <code class=\"language-text\">app.route</code> with:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--port'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> myArg<span class=\"token punctuation\">,</span> myCallback<span class=\"token punctuation\">,</span> anythingYouWant<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Yields to a handler like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = (context, myArg, myCallback, anythingYouWant) =&gt; {\n  // write your code here\n  // probably calling the myCallback argument when done\n}</code></pre></div>\n<h2 id=\"return-value\" style=\"position:relative;\"><a href=\"#return-value\" aria-label=\"return value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" fill=\"#fff\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Return value</h2>\n<p>Anything returned by the handler is also returned by the <code class=\"language-text\">route</code> function. Imaging a handler returning a promise:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>params<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">accept<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      params<span class=\"token punctuation\">.</span>port <span class=\"token operator\">===</span> <span class=\"token number\">3000</span> <span class=\"token operator\">?</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The application calling the route wait for the promise to be resolved with:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--port'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"API method `route`","keywords":["shell","node.js","cli","api","router","command","route"],"description":"How to use the `route` method to execute code associated with a particular command."},"fields":{"edit_url":"https://github.com/adaltas/node-shell/edit/master/content/api/route.md","slug":"/api/route/"},"headings":[{"value":"Basic usage","depth":2,"id":"basic-usage"},{"value":"Passing arguments","depth":2,"id":"passing-arguments"},{"value":"Passing additionnal parameters","depth":2,"id":"passing-additionnal-parameters"},{"value":"Return value","depth":2,"id":"return-value"}]}},"pageContext":{}},"staticQueryHashes":["1387919533","63159454"]}