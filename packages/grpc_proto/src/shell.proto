
syntax = "proto3";

package shell;

// The greeting service definition.
service Shell {
  // Sends a greeting
  rpc ping (PingRequest) returns (PingReply) {}
  // Retrieve the configuration
  rpc config (ConfigRequest) returns (ConfigReply) {}
  // Run shell command
  rpc run (RunRequest) returns (stream RunReply) {}
}

// The request message containing the user's name.
message PingRequest {
  string name = 1;
}

// The response message containing the greetings
message PingReply {
  string message = 1;
}

message ConfigRequest {
  repeated string command = 1;
}

message ConfigReply {
  message Config {
    string name = 1;
    string description = 2;
    bool strict = 3;
    message Option {
      string name = 1;
      string description = 2;
      bool required = 3;
      bool cascade = 4;
      string shortcut = 5;
      enum Type {
        bool = 0;
        integer = 1;
        string = 2;
        array = 3;
      }
      Type type = 6;
      bool help = 7;
    }
    map<string, Option> options = 4;
    map<string, string> shortcuts = 5;
    map<string, Config> commands = 6;
  }
  Config config = 1;
}

message RunRequest {
  repeated string argv = 1;
}

message RunReply {
  // enum type {
  //   stdout = 0;
  //   stderr = 1;
  // }
  // Type type = 6;
  string data = 1;
}
